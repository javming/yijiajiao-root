<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yijiajiao.root.manage.mapper.RouterMapper">

    <select id="routers" resultType="router">
        SELECT
            router.request_id requestId,
            router.request_url requestUrl,
            router.request_method requestMethod,
            router.request_status requestStatus,
            router.mapping_url mappingUrl,
            router.router_status routerStatus,
            router.replace_regex replaceRegex,
            router.description description,
            server_id serverId,
            update_time updateTime,
            wiki
        FROM request_router router
        ORDER BY router.request_id DESC
    </select>

    <select id="routerDetail" resultType="router" parameterType="int">
        SELECT
            request_id requestId,
            request_url requestUrl,
            request_method requestMethod,
            request_status requestStatus,
            mapping_url mappingUrl,
            router_status routerStatus,
            replace_regex replaceRegex,
            description description,
            server_id serverId,
            update_time updateTime,
            wiki
        FROM request_router
        WHERE request_id=#{requestId}
    </select>

    <select id="routersByConditions" resultType="map" parameterType="router">
        SELECT
            router.request_id requestId,
            router.request_url requestUrl,
            router.request_method requestMethod,
            router.request_status requestStatus,
            router.mapping_url mappingUrl,
            router.router_status routerStatus,
            router.replace_regex replaceRegex,
            router.description description,
            router.server_id serverId,
            router.update_time updateTime,
            server.server_agent serverAgent
        FROM request_router router
        LEFT JOIN t_server server
        ON router.server_id=server.server_id
        WHERE 1=1
        <if test="requestUrl!=null">
            AND router.request_url LIKE #{requestUrl}
        </if>
        <if test="requestMethod!=null">
            AND router.request_method=#{requestMethod}
        </if>
        <if test="requestStatus!=null">
            AND router.request_status=#{requestStatus}
        </if>
        <if test="mappingUrl!=null">
            AND router.mapping_url LIKE #{mappingUrl}
        </if>
        ORDER BY router.request_id DESC
    </select>

    <insert id="addRouter" parameterType="router">
        INSERT INTO request_router(
            request_url,
            request_method,
            request_status,
            mapping_url,
            router_status,
            replace_regex,
            description,
            server_id,
            update_time,
            wiki
        ) VALUES (
            #{requestUrl},
            #{requestMethod},
            #{requestStatus},
            #{mappingUrl},
            #{routerStatus},
            #{replaceRegex},
            #{description},
            #{serverId},
            now(),
            #{wiki}
        )
    </insert>

    <update id="updateRouter" parameterType="router">
        UPDATE request_router SET
          request_url=#{requestUrl},
          request_method=#{requestMethod},
          request_status=#{requestStatus},
          mapping_url=#{mappingUrl},
          router_status=#{routerStatus},
          replace_regex=#{replaceRegex},
          description=#{description},
          server_id=#{serverId},
          update_time=now(),
          wiki=#{wiki}
        WHERE request_id=#{requestId}
    </update>

    <insert id="addRouters" parameterType="java.util.List">
        INSERT INTO request_router(
            request_url,
            request_method,
            request_status,
            mapping_url,
            router_status,
            replace_regex,
            description,
            server_id,
            update_time,
            wiki
        ) VALUES
        <foreach collection="list" item="router" index="index" separator=",">
            (
            #{router.requestUrl},
            #{router.requestMethod},
            #{router.requestStatus},
            #{router.mappingUrl},
            #{router.routerStatus},
            #{router.replaceRegex},
            #{router.description},
            #{router.serverId},
            now(),
            #{router.wiki}
            )
        </foreach>

    </insert>

    <delete id="delete" >
        DELETE FROM request_router
        WHERE
          request_id=#{requestId}
    </delete>

</mapper>